{"version":3,"sources":["pages/Navigation.tsx","pages/Counter.tsx","pages/Layout.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["prefix","withRouter","history","useHistory","location","useLocation","as","h","w","IconButton","aria-label","icon","Hamburger","variant","disabled","pathname","urljoin","onClick","event","stopPropagation","preventDefault","push","style","marginRight","justifyContent","flexGrow","Layout","rows","App","path","Counter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8UAOMA,EAAS,aA6DAC,eA3Dc,WAC3B,IAAMC,EAAUC,cACVC,EAAWC,cAEjB,OACE,eAAC,IAAD,CAAMC,GAAG,MAAT,UACE,cAAC,IAAD,CAAQC,EAAE,OAAOC,EAAE,OAAnB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAYF,GAAIG,IAAYC,aAAW,UAAUC,KAAM,cAACC,EAAA,EAAD,IAAmBC,QAAQ,YAElF,eAAC,IAAD,WACE,cAAC,IAAD,CACEF,KAAM,cAAC,IAAD,IACNL,GAAG,MACHQ,SAAUV,EAASW,WAAaC,IAAQhB,EAAQ,KAChDiB,QAAS,SAACC,GACRA,EAAMC,kBACND,EAAME,iBAEFhB,EAASW,WAAaC,IAAQhB,EAAQ,MAI1CE,EAAQmB,KAAK,CAAEN,SAAUC,IAAQhB,EAAQ,QAZ7C,8CAkBA,cAAC,IAAD,CACEW,KAAM,cAAC,IAAD,IACNL,GAAG,MACHQ,SAAUV,EAASW,WAAaC,IAAQhB,EAAQ,WAChDiB,QAAS,SAACC,GACRA,EAAMC,kBACND,EAAME,iBAEFhB,EAASW,WAAaC,IAAQhB,EAAQ,YAI1CE,EAAQmB,KAAK,CAAEN,SAAUC,IAAQhB,EAAQ,cAZ7C,2DAqBN,cAAC,IAAD,CAAQsB,MAAO,CAAEC,YAAa,GAAIC,eAAgB,SAAUC,SAAU,GAAtE,SACE,eAAC,IAAD,CAASnB,GAAG,KAAZ,wCACUF,EAASW,WAAaC,IAAQhB,EAAQ,KAAO,mCAAY,wCAAW,eC5CvE0B,EAbU,WACvB,OACE,qCACE,cAAC,EAAD,IAEA,eAAC,IAAD,WACE,cAAC,IAAD,CAAKnB,EAAE,SACP,cAAC,IAAD,CAAUoB,KAAM,YCKTD,EAZU,WACvB,OACE,qCACE,cAAC,EAAD,IAEA,cAAC,IAAD,UACE,cAAC,IAAD,0DCeOE,EAnBO,WACpB,OACE,cAAC,IAAD,UACE,8BAGE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,UAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAACC,EAAD,c,SCHGC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.19d2100f.chunk.js","sourcesContent":["import { HamburgerIcon } from '@chakra-ui/icons';\nimport { Center, Flex, Heading, IconButton, Menu, MenuButton, MenuItem, MenuList, Square } from '@chakra-ui/react';\nimport React from 'react';\nimport { FaListOl, FaSlidersH } from 'react-icons/fa';\nimport { useHistory, useLocation, withRouter } from 'react-router-dom';\nimport urljoin from 'url-join';\n\nconst prefix = '/seoyedoum';\n\nconst Navigation: React.FC = () => {\n  const history = useHistory();\n  const location = useLocation();\n\n  return (\n    <Flex as=\"nav\">\n      <Center h=\"50px\" w=\"50px\">\n        <Menu>\n          <MenuButton as={IconButton} aria-label=\"Options\" icon={<HamburgerIcon />} variant=\"outline\" />\n\n          <MenuList>\n            <MenuItem\n              icon={<FaListOl />}\n              as=\"div\"\n              disabled={location.pathname === urljoin(prefix, '/')}\n              onClick={(event) => {\n                event.stopPropagation();\n                event.preventDefault();\n\n                if (location.pathname === urljoin(prefix, '/')) {\n                  return;\n                }\n\n                history.push({ pathname: urljoin(prefix, '/') });\n              }}\n            >\n              글자 수 세기\n            </MenuItem>\n\n            <MenuItem\n              icon={<FaSlidersH />}\n              as=\"div\"\n              disabled={location.pathname === urljoin(prefix, '/layout')}\n              onClick={(event) => {\n                event.stopPropagation();\n                event.preventDefault();\n\n                if (location.pathname === urljoin(prefix, '/layout')) {\n                  return;\n                }\n\n                history.push({ pathname: urljoin(prefix, '/layout') });\n              }}\n            >\n              문장 배열하기\n            </MenuItem>\n          </MenuList>\n        </Menu>\n      </Center>\n\n      <Square style={{ marginRight: 35, justifyContent: 'center', flexGrow: 1 }}>\n        <Heading as=\"h1\">\n          서예 도움: {location.pathname === urljoin(prefix, '/') ? '글자 수 세기' : '문장 배열하기'}{' '}\n        </Heading>\n      </Square>\n    </Flex>\n  );\n};\n\nexport default withRouter(Navigation);\n","import { Box, Container, Textarea } from '@chakra-ui/react';\nimport React from 'react';\nimport Navigation from './Navigation';\n\nconst Layout: React.FC = () => {\n  return (\n    <>\n      <Navigation />\n\n      <Container>\n        <Box h=\"20px\" />\n        <Textarea rows={10}></Textarea>\n      </Container>\n    </>\n  );\n};\n\nexport default Layout;\n","import React from 'react';\nimport Navigation from './Navigation';\nimport { Container, Heading } from '@chakra-ui/react';\n\nconst Layout: React.FC = () => {\n  return (\n    <>\n      <Navigation />\n\n      <Container>\n        <Heading>문장 배열하기</Heading>\n      </Container>\n    </>\n  );\n};\n\nexport default Layout;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.scss';\nimport Counter from './pages/Counter';\nimport Layout from './pages/Layout';\n\nconst App: React.FC = () => {\n  return (\n    <Router>\n      <div>\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route path=\"/layout\">\n            <Layout />\n          </Route>\n          <Route path=\"/\">\n            <Counter />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport { ChakraProvider } from '@chakra-ui/react';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider>\n      <App />\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}